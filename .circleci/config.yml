# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs: 
  aws-cli: circleci/aws-cli@3.1.1
  terraform: circleci/terraform@3.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  main:
    resource_class: small
    executor: aws-cli/default
    steps:
      - checkout

      - run: ls
      - echo ($pwd)
      - run: echo "Configuring AWS CLI and profile..."
      - aws-cli/setup:
          profile-name: default
      - aws-cli/role-arn-setup: 
          profile-name: chrisdev_admin
          role-arn: $AWS_ROLE_ARN
          source-profile: default
      - run: aws s3 ls --profile chrisdev_admin
      - run: echo "AWS CLI/Profile configuration complete."

      - run: cd compatibility-list/infrastructure
      - run: ls
      - echo ($pwd)

      - run: echo "Generating provider for $TERRAFORM_ENV_NAME environment..."
      - run: python ./tf-provider-generate.py --var-file="./envs/$TERRAFORM_ENV_NAME.tfvars.json"

      - terraform/install: 
          arch: amd64
          os: linux
          terraform_version: 1.2.2

      - run: echo "Running Terraform..."
      - terraform/validate
      - terraform/init
      - terraform/plan: 
          var_file: ./envs/$TERRAFORM_ENV_NAME.tfvars.json
      - terraform/apply: 
          var_file: ./envs/$TERRAFORM_ENV_NAME.tfvars.json
          
      - run: echo "Terraform deploy complete."
      

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  main: 
    jobs: 
      - main
